name: Release CI

on:
  push:
    branches:
      - 'dev'
    tags:
      - 'v*.*.*'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.get_sha.outputs.sha_short }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            # Add 'latest' tag for pushes to the dev branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/dev' }}
            type=ref,event=branch
            # Create version tags (e.g., v1.2.0 -> 1.2.0, 1.2) for git tags
            # Also create a tag based on the git commit SHA
            type=sha,format=short
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Get short SHA
        id: get_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT


  publish-chart:
    runs-on: ubuntu-latest
    needs: [build-and-push-image]
    permissions:
      # This is required for helm/chart-releaser-action to create releases and push to gh-pages
      contents: write # Required to push to gh-pages branch

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0 # Specify a stable helm version

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.30.8/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Update Chart and Package
        run: |
          # Use 'latest' for dev branch, otherwise use the git tag (commit sha) for appVersion.
          IMAGE_TAG=${{ github.ref == 'refs/heads/dev' && 'latest' || needs.build-and-push-image.outputs.image-tag }}
          echo "Using image tag: ${IMAGE_TAG}"

          # Update the appVersion in Chart.yaml to point to the commit SHA
          yq -i ".appVersion = \"${IMAGE_TAG}\"" ./charts/mock-server/Chart.yaml

      - name: Run chart-releaser
        # This action packages the chart, creates a GitHub Release, and uploads the chart.
        # It only runs for version tags, which is the desired behavior for formal releases.
        if: startsWith(github.ref, 'refs/tags/v')
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"